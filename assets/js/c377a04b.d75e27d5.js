"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[971],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(a),u=n,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return a?r.createElement(g,i(i({ref:t},p),{},{components:a})):r.createElement(g,i({ref:t},p))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1269:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={id:"about",sidebar_position:10},i="About Gmail Processor",s={unversionedId:"about",id:"about",title:"About Gmail Processor",description:"Gmail Processor is an open-source Google Apps Script library that automates the processing of Gmail messages and attachments by executing actions (e.g. store attachments in a GDrive folder, log information into a spreadsheet) depending on powerful matching criteria.",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/gmail-processor/docs/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/index.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{id:"about",sidebar_position:10},sidebar:"docsSidebar",next:{title:"Getting Started",permalink:"/gmail-processor/docs/getting-started"}},l={},c=[{value:"Key Features",id:"key-features",level:2},{value:"How it Works",id:"how-it-works",level:2},{value:"More Information",id:"more-information",level:2}],p={toc:c},m="wrapper";function d(e){let{components:t,...o}=e;return(0,n.kt)(m,(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"about-gmail-processor"},"About Gmail Processor"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/ahochsteger/gmail-processor"},"Gmail Processor"))," is an open-source ",(0,n.kt)("a",{parentName:"p",href:"https://www.google.com/script/start/"},"Google Apps Script")," library that automates the processing of Gmail messages and attachments by executing actions (e.g. store attachments in a GDrive folder, log information into a spreadsheet) depending on powerful matching criteria."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Dall-e generated image: A friendly smiling robot sitting on a table, sorting mails into three paper trays, colorful flat style, white background",src:a(6121).Z,width:"320",height:"240"})),(0,n.kt)("p",null,"It is the successor of ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/ahochsteger/gmail-processor/tree/1.x"},"Gmail2GDrive")," with vastly enhanced functionality, completely re-written in ",(0,n.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," with extensibility and stability in mind, using a modern development setup and automation all over the place (dependency updates, tests, documentation, releases, deployments). There's a convenient migration available to convert your old configuration to the new format (see ",(0,n.kt)("a",{parentName:"p",href:"#migrate-from-gmail2gdrive"},"Getting Started: Migrating from GMail2GDrive v1"),")."),(0,n.kt)("h2",{id:"key-features"},"Key Features"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\ud83e\udd16 ",(0,n.kt)("strong",{parentName:"li"},"Extensive Automation"),": Automate email processing using the provided configuration to match threads, messages, and attachments, and trigger actions accordingly."),(0,n.kt)("li",{parentName:"ul"},"\ud83d\udcc1 ",(0,n.kt)("strong",{parentName:"li"},"Google Drive Integration"),": Store files such as attachments, PDFs of messages, or entire threads into any location within Google Drive, providing easy organization and accessibility."),(0,n.kt)("li",{parentName:"ul"},"\ud83d\udcc4 ",(0,n.kt)("strong",{parentName:"li"},"Google Spreadsheet Logging"),": Keep track of processed threads, messages, and attachments by logging valuable information into a Google Spreadsheet."),(0,n.kt)("li",{parentName:"ul"},"\ud83d\udd27 ",(0,n.kt)("strong",{parentName:"li"},"Flexible Configuration"),": Gmail Processor operates based on a JSON configuration that allows you to define matching rules and specify corresponding actions to be executed."),(0,n.kt)("li",{parentName:"ul"},"\ud83d\udcd0 ",(0,n.kt)("strong",{parentName:"li"},"Extensible Architecture"),": Designed with extensibility in mind, Gmail Processor enables seamless addition of new actions and integrations in the future to adapt to evolving requirements.")),(0,n.kt)("h2",{id:"how-it-works"},"How it Works"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/ahochsteger/gmail-processor"},"Gmail Processor"))," is fed with a JSON configuration that defines a hierarchical list of matching configurations (for threads, containing messages and containing attachments) as well as a list of actions on each level (e.g. export the thread as PDF to Google Drive, add a label to a thread, mark a message as read, store an attachment to a Google Drive folder, ...)."),(0,n.kt)("p",null,"To remember, which threads or messages have already been processed the following methods are currently supported (more to come if there is some demand):"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Mark processed threads by attaching a label"),": This is recommended for simple cases without multiple mail messages in a single thread",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"PROS: Keeps processed messages in an unread state."),(0,n.kt)("li",{parentName:"ul"},"CONS: Cannot process additional messages that may be added after a thread has already been processed."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Mark processed messages as read"),": This is the recommended way because it also can deal with multiple messages per thread.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"PROS: Can process additional messages within the same thread even after a thread has already been processed."),(0,n.kt)("li",{parentName:"ul"},"CONS: Marks the processed messages as read, which may be surprising if not paying attention to."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Custom"),": Leaves the decision on how to remember processed threads/messages to the user of the library using actions",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"PROS: Most flexible, can deal with edge cases"),(0,n.kt)("li",{parentName:"ul"},"CONS: Great care has to be taken that the matching configuration and the actions to mark entities as processed fit together. Otherwise they may get processed over and over again.")))),(0,n.kt)("h2",{id:"more-information"},"More Information"),(0,n.kt)("p",null,"The following pages provide all required information to successfully use Gmail Processor:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/gmail-processor/docs/getting-started"},"Getting Started Guide"))," shows how to setup Gmail Processor in Google Apps Script and quickly get it up and running."),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/gmail-processor/docs/reference/"},"Config Reference"))," provides detailed information about the Gmail Processor configuration."),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/gmail-processor/docs/examples/"},"Examples"))," show different ways of using Gmail Processor."),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"/playground"},"Playground"))," helps to create the configuration in a schema-aware online editor with a visual schema guide on the side.")))}d.isMDXComponent=!0},6121:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/gmail-processor-robot-320-dc19d73004f0e24473dd5c834f7d3792.png"}}]);