"use strict";(self.webpackChunkgmail_processor_docs=self.webpackChunkgmail_processor_docs||[]).push([[7772],{2647:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>u,toc:()=>h});var n=a(4848),r=a(8453),s=a(5696);const c='{\n  "description": "The action `attachment.extractText` extracts text from attachments.",\n  "global": {\n    "thread": {\n      "match": {\n        "query": "has:attachment -in:trash -in:drafts -in:spam from:${user.email} to:${user.email} after:${date.now:date::yyyy-MM-dd} subject:\'[GmailProcessor-Test] actionAttachmentExtractText\'"\n      }\n    }\n  },\n  "settings": {\n    "markProcessedMethod": "mark-read"\n  },\n  "threads": [\n    {\n      "match": {\n        "query": "subject:([GmailProcessor-Test] actionAttachmentExtractText)"\n      },\n      "attachments": [\n        {\n          "description": "Process all attachments named \'invoice*.pdf\'",\n          "match": {\n            "name": "(?<basename>invoice.*)\\\\.pdf$"\n          },\n          "actions": [\n            {\n              "description": "Extract the text from the body of the PDF attachment using language auto-detection.",\n              "name": "attachment.extractText",\n              "args": {\n                "docsFileLocation": "/GmailProcessor-Tests/e2e/actionAttachmentExtractText/${attachment.name.match.basename} (Google Docs)",\n                "extract": "Invoice date:\\\\s*(?<invoiceDate>[A-Za-z]{3} [0-9]{1,2}, [0-9]{4})\\\\s*Invoice number:\\\\s*(?<invoiceNumber>[0-9]+)\\\\s*Payment due:\\\\s(?<paymentDueDays>[0-9]+)\\\\sdays after invoice date"\n              },\n              "processingStage": "pre-main"\n            },\n            {\n              "description": "Store the attachment using extracted values for `invoiceNumber` and `invoiceDate`",\n              "name": "attachment.store",\n              "args": {\n                "conflictStrategy": "update",\n                "location": "/GmailProcessor-Tests/e2e/actionAttachmentExtractText/${attachment.name.match.basename}-number-${attachment.extracted.match.invoiceNumber}-date-${attachment.extracted.match.invoiceDate:date::yyyy-MM-dd}-due-${attachment.extracted.match.paymentDueDays}-days.pdf",\n                "description": "Invoice number: ${attachment.extracted.match.invoiceNumber}\\nInvoice date: ${attachment.extracted.match.invoiceDate:date::yyyy-MM-dd}\\nPayment due: ${attachment.extracted.match.paymentDueDays} days"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n',o='function actionAttachmentExtractTextRun() {\n  const config = {\n    description:\n      "The action `attachment.extractText` extracts text from attachments.",\n    global: {\n      thread: {\n        match: {\n          query:\n            "has:attachment -in:trash -in:drafts -in:spam from:${user.email} to:${user.email} after:${date.now:date::yyyy-MM-dd} subject:\'[GmailProcessor-Test] actionAttachmentExtractText\'",\n        },\n      },\n    },\n    settings: {\n      markProcessedMethod: "mark-read",\n    },\n    threads: [\n      {\n        match: {\n          query: "subject:([GmailProcessor-Test] actionAttachmentExtractText)",\n        },\n        attachments: [\n          {\n            description: "Process all attachments named \'invoice*.pdf\'",\n            match: {\n              name: "(?<basename>invoice.*)\\\\.pdf$",\n            },\n            actions: [\n              {\n                description:\n                  "Extract the text from the body of the PDF attachment using language auto-detection.",\n                name: "attachment.extractText",\n                args: {\n                  docsFileLocation:\n                    "/GmailProcessor-Tests/e2e/actionAttachmentExtractText/${attachment.name.match.basename} (Google Docs)",\n                  extract:\n                    "Invoice date:\\\\s*(?<invoiceDate>[A-Za-z]{3} [0-9]{1,2}, [0-9]{4})\\\\s*Invoice number:\\\\s*(?<invoiceNumber>[0-9]+)\\\\s*Payment due:\\\\s(?<paymentDueDays>[0-9]+)\\\\sdays after invoice date",\n                },\n                processingStage: "pre-main",\n              },\n              {\n                description:\n                  "Store the attachment using extracted values for `invoiceNumber` and `invoiceDate`",\n                name: "attachment.store",\n                args: {\n                  conflictStrategy: "update",\n                  location:\n                    "/GmailProcessor-Tests/e2e/actionAttachmentExtractText/${attachment.name.match.basename}-number-${attachment.extracted.match.invoiceNumber}-date-${attachment.extracted.match.invoiceDate:date::yyyy-MM-dd}-due-${attachment.extracted.match.paymentDueDays}-days.pdf",\n                  description:\n                    "Invoice number: ${attachment.extracted.match.invoiceNumber}\\nInvoice date: ${attachment.extracted.match.invoiceDate:date::yyyy-MM-dd}\\nPayment due: ${attachment.extracted.match.paymentDueDays} days",\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  }\n\n  GmailProcessorLib.run(config, "dry-run")\n}\n';var i=a(6908);const l={id:"actionAttachmentExtractText",title:"Extract Attachment Text",description:"The action `attachment.extractText` extracts text from attachments."},d=void 0,u={id:"examples/actions/actionAttachmentExtractText",title:"Extract Attachment Text",description:"The action `attachment.extractText` extracts text from attachments.",source:"@site/docs/examples/actions/actionAttachmentExtractText.mdx",sourceDirName:"examples/actions",slug:"/examples/actions/actionAttachmentExtractText",permalink:"/gmail-processor/docs/examples/actions/actionAttachmentExtractText",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/examples/actions/actionAttachmentExtractText.mdx",tags:[],version:"current",frontMatter:{id:"actionAttachmentExtractText",title:"Extract Attachment Text",description:"The action `attachment.extractText` extracts text from attachments."},sidebar:"docsSidebar",previous:{title:"Actions",permalink:"/gmail-processor/docs/examples/actions/"},next:{title:"Export Thread/Message",permalink:"/gmail-processor/docs/examples/actions/actionExport"}},m={},h=[];function f(e){const t={code:"code",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["This example demonstrates the use of the action ",(0,n.jsx)(t.code,{children:"attachment.extractText"})," to extract matching text from the content of an attachment for use in later actions (e.g. use as part of the filename for ",(0,n.jsx)(t.code,{children:"attachment.store"}),")."]}),"\n",(0,n.jsx)(s.A,{info:i.pq,config:c,script:o})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(f,{...e})}):f(e)}},9365:(e,t,a)=>{a.r(t),a.d(t,{default:()=>c});a(6540);var n=a(4164);const r={tabItem:"tabItem_Ymn6"};var s=a(4848);function c(e){let{children:t,hidden:a,className:c}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,c),hidden:a,children:t})}},1470:(e,t,a)=>{a.r(t),a.d(t,{default:()=>T});var n=a(6540),r=a(4164),s=a(3104),c=a(6347),o=a(205),i=a(7485),l=a(1682),d=a(679);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}(a);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function h(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const r=(0,c.W6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i.aZ)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function p(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,s=m(e),[c,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[l,u]=f({queryString:a,groupId:r}),[p,x]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,d.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:r}),g=(()=>{const e=l??p;return h({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{g&&i(g)}),[g]);return{selectedValue:c,selectValue:(0,n.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),x(e)}),[u,x,s]),tabValues:s}}var x=a(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=a(4848);function A(e){let{className:t,block:a,selectedValue:n,selectValue:c,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),d=e=>{const t=e.currentTarget,a=i.indexOf(t),r=o[a].value;r!==n&&(l(t),c(r))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=i.indexOf(e.currentTarget)+1;t=i[a]??i[0];break}case"ArrowLeft":{const a=i.indexOf(e.currentTarget)-1;t=i[a]??i[i.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},t),children:o.map((e=>{let{value:t,label:a,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>i.push(e),onKeyDown:u,onClick:d,...s,className:(0,r.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":n===t}),children:a??t},t)}))})}function y(e){let{lazy:t,children:a,selectedValue:r}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function b(e){const t=p(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,v.jsx)(A,{...t,...e}),(0,v.jsx)(y,{...t,...e})]})}function T(e){const t=(0,x.A)();return(0,v.jsx)(b,{...e,children:u(e.children)},String(t))}},5696:(e,t,a)=>{a.d(t,{A:()=>h});var n=a(8774),r=a(1432),s=a(9365),c=a(1470),o=(a(6540),a(301)),i=a(4848);const l="https://github.com/ahochsteger/gmail-processor/blob/main/src/examples",d="https://github.com/ahochsteger/gmail-processor/issues",u="https://github.com/ahochsteger/gmail-processor/pull";function m(e,t,a){let n=[];return a&&a.length>0&&(n=[(0,i.jsxs)("span",{children:[" | ",e,": "]},`${e}-0`)].concat(a?.map(((e,a,n)=>(0,i.jsxs)("span",{children:[(0,i.jsxs)("a",{href:`${t}/${e}`,children:["#",e]}),a<n.length-1?" ":""]},e)))),n.push((0,i.jsx)("span",{}))),n}function h(e){let{info:t,config:a,script:h}=e;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("p",{children:["\ud83d\udc49 Edit this example in the ",(0,i.jsx)(n.A,{href:`/playground?example=${t.name}`,children:"playground"}),t.variant===o.sE.MIGRATION_V1?" and automatically migrate it to the v2 format using the convert button":"","."]}),(0,i.jsxs)(c.default,{children:[(0,i.jsx)(s.default,{value:"config",label:"Config",default:!0,children:(0,i.jsx)(r.default,{language:"js",showLineNumbers:!0,children:a})}),(0,i.jsx)(s.default,{value:"script",label:"Script",children:(0,i.jsx)(r.default,{language:"js",showLineNumbers:!0,children:h})})]}),(0,i.jsxs)("p",{children:[(0,i.jsxs)("span",{children:["Source: ",(0,i.jsxs)("a",{href:`${l}/${t.category}/${t.name}`,children:[t.name,".ts"]})]}),m("Issues",d,t.issues),m("PRs",u,t.pullRequests)]})]})}},301:(e,t,a)=>{a.d(t,{bk:()=>r,lI:()=>n,sE:()=>s});let n=function(e){return e.ACTIONS="actions",e.ADVANCED="advanced",e.BASICS="basics",e.FEATURES="features",e.MIGRATIONS="migrations",e.REGRESSIONS="regressions",e}({}),r=function(e){return e.CONFIG="config",e.DOCS="docs",e.DOCS_INDEX="docs-index",e.GAS_CODE="gas-code",e.GAS_TEST="gas-test",e.TEST_SPEC="test-spec",e}({}),s=function(e){return e.CUSTOM_ACTIONS="custom-actions",e.MIGRATION_V1="migration-v1",e}({})},6908:(e,t,a)=>{a.d(t,{Fw:()=>d,pq:()=>i});var n=a(7694),r=a(301),s=(a(2744),a(8158)),c=a(4460),o=a(6407);const i={name:"actionAttachmentExtractText",title:"Extract Attachment Text",description:"The action `attachment.extractText` extracts text from attachments.",category:r.lI.ACTIONS,pullRequests:[319]},l={description:i.description,global:{thread:{match:{query:`has:attachment -in:trash -in:drafts -in:spam from:\${user.email} to:\${user.email} after:\${date.now:date::yyyy-MM-dd} subject:'${n.L.EMAIL_SUBJECT_PREFIX}${i.name}'`}}},settings:{markProcessedMethod:o.Pn.MARK_MESSAGE_READ},threads:[{match:{query:`subject:([GmailProcessor-Test] ${i.name})`},attachments:[{description:"Process all attachments named 'invoice*.pdf'",match:{name:"(?<basename>invoice.*)\\.pdf$"},actions:[{description:"Extract the text from the body of the PDF attachment using language auto-detection.",name:"attachment.extractText",args:{docsFileLocation:`${n.L.DRIVE_TESTS_BASE_PATH}/${i.name}/\${attachment.name.match.basename} (Google Docs)`,extract:"Invoice date:\\s*(?<invoiceDate>[A-Za-z]{3} [0-9]{1,2}, [0-9]{4})\\s*Invoice number:\\s*(?<invoiceNumber>[0-9]+)\\s*Payment due:\\s(?<paymentDueDays>[0-9]+)\\sdays after invoice date"},processingStage:c.Sg.PRE_MAIN},{description:"Store the attachment using extracted values for `invoiceNumber` and `invoiceDate`",name:"attachment.store",args:{conflictStrategy:s.c2.UPDATE,location:`${n.L.DRIVE_TESTS_BASE_PATH}/${i.name}/\${attachment.name.match.basename}-number-\${attachment.extracted.match.invoiceNumber}-date-\${attachment.extracted.match.invoiceDate:date::yyyy-MM-dd}-due-\${attachment.extracted.match.paymentDueDays}-days.pdf`,description:"Invoice number: ${attachment.extracted.match.invoiceNumber}\nInvoice date: ${attachment.extracted.match.invoiceDate:date::yyyy-MM-dd}\nPayment due: ${attachment.extracted.match.paymentDueDays} days"}}]}]}]},d={info:i,config:l}},2744:(e,t,a)=>{a.d(t,{Ah:()=>r,GS:()=>c,KI:()=>s,jV:()=>n});let n=function(e){return e.DRY_RUN="dry-run",e.SAFE_MODE="safe-mode",e.DANGEROUS="dangerous",e}({}),r=function(e){return e.BOOLEAN="boolean",e.DATE="date",e.NUMBER="number",e.STRING="string",e.VARIABLE="variable",e}({});function s(e,t,a,n,r){return{deprecationInfo:r,description:n,title:a,type:e,value:t}}let c=function(e){return e.ERROR="error",e.OK="ok",e}({});Error},8158:(e,t,a)=>{a.d(t,{c2:()=>K});a(2744);var n=a(3359),r=a(7937),s=a(8118),c=a(8828),o=a(3380),i=a(5449),l=a(120),d=a(7736),u=a(575),m=a(7890),h=a(1634),f=a(8220),p=a(7102),x=a(738),g=a(9259),v=a(8305),A=a(506),y=a(1827),b=a(3757),T=a(8772),E=a(9596),S=a(8655),I=a(8016),k=a(655),D=a(2497),$=a(721),j=a(4313),M=a(7036),_=a(6143),P=a(7072),R=a(783),N=a(9953),V=a(9678),L=a(9113),w=a(8275),O=a(6191),G=a(2685),C=a(2950),U=a(2469),F=a(399),q=a(2163),B=a(7569),z=a(8375),H=a(6898);a(2882),a(5067),a(3711);n.A,r.A,s.A,c.A,o.A,i.A,l.A,d.A,u.A,m.A,h.A,f.A,p.A,x.A,g.A,v.A,A.A,y.A,b.A,T.A,E.A,S.A,I.A,k.A,D.A,$.A,j.A,M.A,_.A,P.A,R.A,N.A,V.A,L.A,w.A,O.A,G.A,C.A,U.A,F.A,q.A,B.A,z.A,H.A;let K=function(e){return e.BACKUP="backup",e.ERROR="error",e.KEEP="keep",e.REPLACE="replace",e.SKIP="skip",e.UPDATE="update",e}({})},4460:(e,t,a)=>{a.d(t,{Sg:()=>o,ej:()=>h,jG:()=>m,kj:()=>d,mt:()=>f,v1:()=>l,wf:()=>u});var n=a(4729),r=a(8420),s=a(5698),c=(a(5508),a(7158));let o=function(e){return e.PRE_MAIN="pre-main",e.MAIN="main",e.POST_MAIN="post-main",e}({}),i=(0,n.A)(null,(function(e){return{F:class{constructor(){e(this)}},d:[{kind:"field",decorators:[(0,r.v)()],key:"args",value:void 0},{kind:"field",decorators:[(0,r.v)()],key:"description",value:()=>""},{kind:"field",decorators:[(0,r.v)()],key:"name",value:()=>""},{kind:"field",decorators:[(0,r.v)()],key:"processingStage",value:()=>o.POST_MAIN}]}}));class l extends i{}class d extends i{}class u extends i{}function m(e){var t;return e=(0,c.I)(e,(t={name:"thread.noop"},(0,s.bj)(l,t,{exposeDefaultValues:!0,exposeUnsetFields:!1})))}function h(e){var t;return e=(0,c.I)(e,(t={name:"message.noop"},(0,s.bj)(d,t,{exposeDefaultValues:!0,exposeUnsetFields:!1})))}function f(e){var t;return e=(0,c.I)(e,(t={name:"attachment.noop"},(0,s.bj)(u,t,{exposeDefaultValues:!0,exposeUnsetFields:!1})))}},6407:(e,t,a)=>{a.d(t,{$b:()=>l,GJ:()=>h,Pn:()=>d,c1:()=>p,we:()=>f});var n=a(4729),r=a(4467),s=a(8420),c=a(5136),o=a(5698),i=(a(5508),a(7158));let l=function(e){return e.TRACE="trace",e.DEBUG="debug",e.INFO="info",e.WARN="warn",e.ERROR="error",e}({}),d=function(e){return e.ADD_THREAD_LABEL="add-label",e.CUSTOM="custom",e.MARK_MESSAGE_READ="mark-read",e}({});class u{constructor(){(0,r.A)(this,"name",""),(0,r.A)(this,"title",""),(0,r.A)(this,"value",void 0),(0,r.A)(this,"ctxValues",{})}}let m=function(e){return e.NONE="none",e.AUTO="auto",e.ALL="all",e}({}),h=(0,n.A)(null,(function(e){return{F:class{constructor(){e(this)}},d:[{kind:"field",key:"defaultTimestampFormat",value:()=>"yyyy-MM-dd HH:mm:ss"},{kind:"field",key:"defaultArrayJoinSeparator",value:()=>","},{kind:"field",decorators:[(0,s.v)()],key:"logSheetLocation",value:()=>""},{kind:"field",decorators:[(0,s.v)()],key:"logFields",value:()=>["log.timestamp","log.level","log.location","log.message","object.id","object.date","object.subject","object.from","object.url","attachment.name","attachment.size","attachment.contentType","stored.location","stored.url","stored.downloadUrl"]},{kind:"field",decorators:[(0,s.v)(),(0,c.Z)((()=>u))],key:"logConfig",value:()=>[{name:"log.timestamp",title:"Timestamp",value:"${date.now:date::yyyy-MM-dd HH:mm:ss.SSS}"},{name:"log.level",title:"Log Level"},{name:"log.message",title:"Log Message"},{name:"context.type",title:"Context Type"},{name:"object.id",title:"ID",ctxValues:{attachment:"${attachment.hash}",message:"${message.id}",thread:"${thread.id}"}},{name:"object.url",title:"GMail URL",ctxValues:{attachment:"${message.url}",message:"${message.url}",thread:"${thread.url}"}},{name:"object.date",title:"Message Date",ctxValues:{attachment:"${message.date}",message:"${message.date}",thread:"${thread.lastMessageDate}"}},{name:"object.subject",title:"Subject",ctxValues:{attachment:"${message.subject}",message:"${message.subject}",thread:"${thread.firstMessageSubject}"}},{name:"object.from",title:"From",ctxValues:{attachment:"${message.from}",message:"${message.from}"}},{name:"attachment.name",title:"Attachment Name"},{name:"attachment.contentType",title:"Content Type"},{name:"attachment.size",title:"Attachment Size"},{name:"stored.location",title:"Stored Location",ctxValues:{attachment:"${attachment.stored.location}"}},{name:"stored.url",title:"Stored URL",ctxValues:{attachment:"${attachment.stored.url}"}},{name:"stored.downloadUrl",title:"Download URL",ctxValues:{attachment:"${attachment.stored.downloadUrl}"}}]},{kind:"field",key:"logLevel",value:()=>l.INFO},{kind:"field",key:"logSensitiveRedactionMode",value:()=>m.AUTO},{kind:"field",key:"logSheetTracing",value:()=>!1},{kind:"field",decorators:[(0,s.v)()],key:"maxBatchSize",value:()=>10},{kind:"field",decorators:[(0,s.v)()],key:"maxRuntime",value:()=>280},{kind:"field",decorators:[(0,s.v)()],key:"markProcessedLabel",value:()=>""},{kind:"field",decorators:[(0,s.v)()],key:"markProcessedMethod",value:()=>d.MARK_MESSAGE_READ},{kind:"field",decorators:[(0,s.v)()],key:"sleepTimeThreads",value:()=>100},{kind:"field",decorators:[(0,s.v)()],key:"sleepTimeMessages",value:()=>0},{kind:"field",decorators:[(0,s.v)()],key:"sleepTimeAttachments",value:()=>0},{kind:"field",decorators:[(0,s.v)()],key:"timezone",value:()=>"default"}]}}));function f(e){return void 0===e&&(e={}),(0,o.bj)(h,e,{exposeDefaultValues:!0,exposeUnsetFields:!1})}function p(e){return e=(0,i.I)(e,f(),{},["markProcessedMethod"])}},7694:(e,t,a)=>{a.d(t,{L:()=>r});var n=a(4467);class r{}(0,n.A)(r,"DRIVE_TESTS_BASE_PATH","/GmailProcessor-Tests/e2e"),(0,n.A)(r,"EMAIL_SLEEP_TIME_MS",1e4),(0,n.A)(r,"EMAIL_SUBJECT_PREFIX","[GmailProcessor-Test] "),(0,n.A)(r,"GIT_REPO_BASE_URL","https://raw.githubusercontent.com/ahochsteger/gmail-processor"),(0,n.A)(r,"GIT_REPO_BRANCH","main"),(0,n.A)(r,"GIT_REPO_TEST_FILES_PATH","src/e2e-test/files")},7158:(e,t,a)=>{function n(e,t,a,n){return void 0===a&&(a={}),void 0===n&&(n=[]),n=n.concat([]),Object.keys(e).forEach((r=>{const s=function(e,t){return Array.isArray(e)&&t?e=e.map((e=>t(e))):"object"==typeof e&&t&&(e=t(e)),e}(e[r],a[r]),c=JSON.stringify(s);n.includes(r)||null!==s&&c!==JSON.stringify(t[r])&&"[]"!==c&&"{}"!==c||delete e[r]})),e}a.d(t,{I:()=>n})}}]);