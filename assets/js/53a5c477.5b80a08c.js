"use strict";(self.webpackChunkgmail_processor_docs=self.webpackChunkgmail_processor_docs||[]).push([[3866],{5789:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>h,toc:()=>m});var a=s(4848),n=s(8453),r=s(5696);const i='{\n  "description": "Use this to get started with Gmail Processor. It stores an attachment to Google Drive.",\n  "settings": {\n    "markProcessedMethod": "mark-read"\n  },\n  "global": {\n    "thread": {\n      "match": {\n        "query": "has:attachment -in:trash -in:drafts -in:spam after:${date.now:date::yyyy-MM-dd} is:unread subject:\\"[GmailProcessor-Test] simple\\""\n      }\n    }\n  },\n  "threads": [\n    {\n      "match": {\n        "query": "from:${user.email}"\n      },\n      "messages": [\n        {\n          "attachments": [\n            {\n              "match": {\n                "name": "^invoice\\\\.pdf$"\n              },\n              "actions": [\n                {\n                  "name": "attachment.store",\n                  "args": {\n                    "location": "/GmailProcessor-Tests/e2e/simple/${message.date:date::yyyy-MM-dd}/${message.subject}-${attachment.name}",\n                    "conflictStrategy": "keep"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n';var o=s(514),c=s(4153);const l={id:"simple",title:"Store Attachment",description:"Use this to get started with Gmail Processor. It stores an attachment to Google Drive."},d=void 0,h={id:"examples/basics/simple",title:"Store Attachment",description:"Use this to get started with Gmail Processor. It stores an attachment to Google Drive.",source:"@site/docs/examples/basics/simple.mdx",sourceDirName:"examples/basics",slug:"/examples/basics/simple",permalink:"/gmail-processor/docs/examples/basics/simple",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/examples/basics/simple.mdx",tags:[],version:"current",frontMatter:{id:"simple",title:"Store Attachment",description:"Use this to get started with Gmail Processor. It stores an attachment to Google Drive."},sidebar:"docsSidebar",previous:{title:"Basics",permalink:"/gmail-processor/docs/examples/basics/"},next:{title:"Features",permalink:"/gmail-processor/docs/examples/features/"}},u={},m=[];function g(e){const t={a:"a",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"This is a simple example to start with Gmail Processor."}),"\n",(0,a.jsxs)(t.p,{children:["There's one ",(0,a.jsx)(t.strong,{children:"critical decision"})," to be taken about how threads or messages should be marked as processed to prevent multiple processing."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsxs)(t.strong,{children:[(0,a.jsx)(t.code,{children:"mark-read"}),":"]})," Mark processed messages as read. This is the recommended method to get started, because it also can deal with multiple messages per thread.","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"PROS: Can process additional messages within the same thread even after a thread has already been processed."}),"\n",(0,a.jsx)(t.li,{children:"CONS: Marks the processed messages as read, which may not be what you want to have."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsxs)(t.strong,{children:[(0,a.jsx)(t.code,{children:"add-label"}),":"]})," Mark processed threads by attaching the label configured using ",(0,a.jsx)(t.code,{children:"markProcessedLabel"}),". This is recommended for simple cases with just a single message in each processed thread.","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"PROS: Keeps processed messages in an unread state."}),"\n",(0,a.jsx)(t.li,{children:"CONS: Cannot process additional messages that may be added after a thread has already been processed."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsxs)(t.strong,{children:[(0,a.jsx)(t.code,{children:"custom"}),":"]}),": Leaves the decision on how to remember processed threads/messages to the user of the library using certain actions.","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["PROS: Most flexible, can deal with many edge cases using one of the many actions (e.g. ",(0,a.jsx)(t.code,{children:"moveToArchive"}),", ",(0,a.jsx)(t.code,{children:"moveToTrash"}),", ",(0,a.jsx)(t.code,{children:"star"}),", ",(0,a.jsx)(t.code,{children:"markRead"}),", ",(0,a.jsx)(t.code,{children:"markImportant"}),", ",(0,a.jsx)(t.code,{children:"addLabel"}),")"]}),"\n",(0,a.jsx)(t.li,{children:"CONS: Great care has to be taken that the matching configuration and the actions to mark entities as processed fit together. Otherwise they may get processed over and over again."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"You can put match configs which should m\nThe primary configuration resides in a nested list of config structures with the following parts:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"threads"}),":","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Defines which threads should be queried and matched in the ",(0,a.jsx)(t.code,{children:"match"})," section."]}),"\n",(0,a.jsxs)(t.li,{children:["Defines which actions should be executed for matching threads in the ",(0,a.jsx)(t.code,{children:"actions"})," section."]}),"\n",(0,a.jsxs)(t.li,{children:["Delegates processing of further messages to the ",(0,a.jsx)(t.code,{children:"messages"})," section."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"messages"}),":","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Defines which messages should be matched in the ",(0,a.jsx)(t.code,{children:"match"})," section."]}),"\n",(0,a.jsxs)(t.li,{children:["Defines which actions should be executed for matching messages in the ",(0,a.jsx)(t.code,{children:"actions"})," section."]}),"\n",(0,a.jsxs)(t.li,{children:["Delegates processing of further attachments to the ",(0,a.jsx)(t.code,{children:"attachments"})," section."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"attachments"}),":","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Defines which attachments should be matched in the ",(0,a.jsx)(t.code,{children:"match"})," section."]}),"\n",(0,a.jsxs)(t.li,{children:["Defines which actions should be executed for matching attachments in the ",(0,a.jsx)(t.code,{children:"actions"})," section."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Matches or actions that should always be taken into account for every thread/message/attachment can be put into the global section."}),"\n",(0,a.jsx)(t.p,{children:"This example uses a global thread match query to ensure only threads that comply to these criteria should be processed:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"has attachments"}),"\n",(0,a.jsx)(t.li,{children:"is not in trash"}),"\n",(0,a.jsx)(t.li,{children:"is not in spam"}),"\n",(0,a.jsx)(t.li,{children:"is not a draft"}),"\n",(0,a.jsx)(t.li,{children:"contains messages after a certain date"}),"\n",(0,a.jsx)(t.li,{children:"contains messages with a certain subject"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["The processing continues by restricting the query to threads where the user is the sender.\nSince the messages section does not have any additional matcher, all messages in the thread will be processed.\nIn the attachments section the ",(0,a.jsx)(t.code,{children:"match"})," section restricts processing to attachments that have the name ",(0,a.jsx)(t.code,{children:"invoice.pdf"})," using a regular expression.\nMatching attachments will then be stored at the given location using ",(0,a.jsx)(t.a,{href:"https://ahochsteger.github.io/gmail-processor/docs/reference/placeholder",children:"placeholder substitution"})," to dynamically create the location based on thread/message/attachment data."]}),"\n",(0,a.jsx)(r.A,{info:c.pq,config:i,script:o.A})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},9365:(e,t,s)=>{s.r(t),s.d(t,{default:()=>i});s(6540);var a=s(4164);const n={tabItem:"tabItem_Ymn6"};var r=s(4848);function i(e){let{children:t,hidden:s,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(n.tabItem,i),hidden:s,children:t})}},1470:(e,t,s)=>{s.r(t),s.d(t,{default:()=>A});var a=s(6540),n=s(4164),r=s(3104),i=s(6347),o=s(205),c=s(7485),l=s(1682),d=s(679);function h(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:s}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:s,attributes:a,default:n}}=e;return{value:t,label:s,attributes:a,default:n}}))}(s);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,s])}function m(e){let{value:t,tabValues:s}=e;return s.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:s}=e;const n=(0,i.W6)(),r=function(e){let{queryString:t=!1,groupId:s}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:t,groupId:s});return[(0,c.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function p(e){const{defaultValue:t,queryString:s=!1,groupId:n}=e,r=u(e),[i,c]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=s.find((e=>e.default))??s[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[l,h]=g({queryString:s,groupId:n}),[p,f]=function(e){let{groupId:t}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,r]=(0,d.Dv)(s);return[n,(0,a.useCallback)((e=>{s&&r.set(e)}),[s,r])]}({groupId:n}),b=(()=>{const e=l??p;return m({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{b&&c(b)}),[b]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),f(e)}),[h,f,r]),tabValues:r}}var f=s(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=s(4848);function j(e){let{className:t,block:s,selectedValue:a,selectValue:i,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),d=e=>{const t=e.currentTarget,s=c.indexOf(t),n=o[s].value;n!==a&&(l(t),i(n))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=c.indexOf(e.currentTarget)+1;t=c[s]??c[0];break}case"ArrowLeft":{const s=c.indexOf(e.currentTarget)-1;t=c[s]??c[c.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":s},t),children:o.map((e=>{let{value:t,label:s,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>c.push(e),onKeyDown:h,onClick:d,...r,className:(0,n.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":a===t}),children:s??t},t)}))})}function y(e){let{lazy:t,children:s,selectedValue:n}=e;const r=(Array.isArray(s)?s:[s]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function v(e){const t=p(e);return(0,x.jsxs)("div",{className:(0,n.A)("tabs-container",b.tabList),children:[(0,x.jsx)(j,{...t,...e}),(0,x.jsx)(y,{...t,...e})]})}function A(e){const t=(0,f.A)();return(0,x.jsx)(v,{...e,children:h(e.children)},String(t))}},5696:(e,t,s)=>{s.d(t,{A:()=>m});var a=s(8774),n=s(1432),r=s(9365),i=s(1470),o=(s(6540),s(301)),c=s(4848);const l="https://github.com/ahochsteger/gmail-processor/blob/main/src/examples",d="https://github.com/ahochsteger/gmail-processor/issues",h="https://github.com/ahochsteger/gmail-processor/pull";function u(e,t,s){let a=[];return s&&s.length>0&&(a=[(0,c.jsxs)("span",{children:[" | ",e,": "]},`${e}-0`)].concat(s?.map(((e,s,a)=>(0,c.jsxs)("span",{children:[(0,c.jsxs)("a",{href:`${t}/${e}`,children:["#",e]}),s<a.length-1?" ":""]},e)))),a.push((0,c.jsx)("span",{}))),a}function m(e){let{info:t,config:s,script:m}=e;return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)("p",{children:["\ud83d\udc49 Edit this example in the ",(0,c.jsx)(a.A,{href:`/playground?example=${t.name}`,children:"playground"}),t.variant===o.sE.MIGRATION_V1?" and automatically migrate it to the v2 format using the convert button":"","."]}),(0,c.jsxs)(i.default,{children:[(0,c.jsx)(r.default,{value:"config",label:"Config",default:!0,children:(0,c.jsx)(n.default,{language:"js",showLineNumbers:!0,children:s})}),(0,c.jsx)(r.default,{value:"script",label:"Script",children:(0,c.jsx)(n.default,{language:"js",showLineNumbers:!0,children:m})})]}),(0,c.jsxs)("p",{children:[(0,c.jsxs)("span",{children:["Source: ",(0,c.jsxs)("a",{href:`${l}/${t.category}/${t.name}`,children:[t.name,".ts"]})]}),u("Issues",d,t.issues),u("PRs",h,t.pullRequests)]})]})}},301:(e,t,s)=>{s.d(t,{bk:()=>n,lI:()=>a,sE:()=>r});let a=function(e){return e.ACTIONS="actions",e.ADVANCED="advanced",e.BASICS="basics",e.FEATURES="features",e.MIGRATIONS="migrations",e.REGRESSIONS="regressions",e}({}),n=function(e){return e.CONFIG="config",e.DOCS="docs",e.DOCS_INDEX="docs-index",e.GAS_CODE="gas-code",e.GAS_TEST="gas-test",e.TEST_SPEC="test-spec",e}({}),r=function(e){return e.CUSTOM_ACTIONS="custom-actions",e.MIGRATION_V1="migration-v1",e}({})},4153:(e,t,s)=>{s.d(t,{Fw:()=>l,pq:()=>o});s(2744);var a=s(8158),n=s(6407),r=s(301),i=s(7694);const o={name:"simple",title:"Store Attachment",description:"Use this to get started with Gmail Processor. It stores an attachment to Google Drive.",category:r.lI.BASICS},c={description:o.description,settings:{markProcessedMethod:n.Pn.MARK_MESSAGE_READ},global:{thread:{match:{query:`has:attachment -in:trash -in:drafts -in:spam after:\${date.now:date::yyyy-MM-dd} is:unread subject:"${i.L.EMAIL_SUBJECT_PREFIX}${o.name}"`}}},threads:[{match:{query:"from:${user.email}"},messages:[{attachments:[{match:{name:"^invoice\\.pdf$"},actions:[{name:"attachment.store",args:{location:`${i.L.DRIVE_TESTS_BASE_PATH}/${o.name}/\${message.date:date::yyyy-MM-dd}/\${message.subject}-\${attachment.name}`,conflictStrategy:a.c2.KEEP}}]}]}]}]},l={info:o,config:c}},2744:(e,t,s)=>{s.d(t,{Ah:()=>n,GS:()=>i,KI:()=>r,jV:()=>a});let a=function(e){return e.DRY_RUN="dry-run",e.SAFE_MODE="safe-mode",e.DANGEROUS="dangerous",e}({}),n=function(e){return e.BOOLEAN="boolean",e.DATE="date",e.NUMBER="number",e.STRING="string",e.VARIABLE="variable",e}({});function r(e,t,s,a,n){return{deprecationInfo:n,description:a,title:s,type:e,value:t}}let i=function(e){return e.ERROR="error",e.OK="ok",e}({});Error},8158:(e,t,s)=>{s.d(t,{c2:()=>W});s(2744);var a=s(9749),n=s(857),r=s(7015),i=s(6749),o=s(3863),c=s(641),l=s(4773),d=s(2511),h=s(53),u=s(7456),m=s(6712),g=s(262),p=s(2695),f=s(5940),b=s(4844),x=s(9772),j=s(8908),y=s(7256),v=s(739),A=s(3365),S=s(4912),k=s(2829),E=s(5668),T=s(8274),w=s(341),I=s(5076),R=s(297),M=s(3572),$=s(9446),_=s(7616),D=s(2190),P=s(9585),G=s(6672),N=s(7244),O=s(4138),L=s(7376),V=s(8933),C=s(2702),U=s(1906),q=s(6560),B=s(7038),F=s(9590),K=s(2745),H=s(5407),z=s(3945),J=s(6014);s(4712),s(4758),s(3711);a.D,n.z,r.F,i.g,o.f,c.V,l.p,d.j,h.x,u.o,m.o,g.Q,p.B,f.o,b.d,x.K,j.W,y.E,v.T,A.j,S.u,k.R,E.u,T.G,w.H,I.M,R.N,M._,$.D,_.W,D.i,P.N,G.G,N.o,O.M,L.Q,V.b,C.w,U.c,q.w,B.a,F.a,K.R,H.R,z.D,J.K;let W=function(e){return e.BACKUP="backup",e.ERROR="error",e.KEEP="keep",e.REPLACE="replace",e.SKIP="skip",e.UPDATE="update",e}({})},6407:(e,t,s)=>{s.d(t,{$b:()=>l,GJ:()=>m,Pn:()=>d,c1:()=>p,we:()=>g});var a=s(4729),n=s(4467),r=s(8420),i=s(5136),o=s(5698),c=(s(5508),s(7158));let l=function(e){return e.TRACE="trace",e.DEBUG="debug",e.INFO="info",e.WARN="warn",e.ERROR="error",e}({}),d=function(e){return e.ADD_THREAD_LABEL="add-label",e.CUSTOM="custom",e.MARK_MESSAGE_READ="mark-read",e}({});class h{constructor(){(0,n.A)(this,"name",""),(0,n.A)(this,"title",""),(0,n.A)(this,"value",void 0),(0,n.A)(this,"ctxValues",{})}}let u=function(e){return e.NONE="none",e.AUTO="auto",e.ALL="all",e}({}),m=(0,a.A)(null,(function(e){return{F:class{constructor(){e(this)}},d:[{kind:"field",key:"defaultTimestampFormat",value:()=>"yyyy-MM-dd HH:mm:ss"},{kind:"field",key:"defaultArrayJoinSeparator",value:()=>","},{kind:"field",decorators:[(0,r.v)()],key:"logSheetLocation",value:()=>""},{kind:"field",decorators:[(0,r.v)()],key:"logFields",value:()=>["log.timestamp","log.level","log.location","log.message","object.id","object.date","object.subject","object.from","object.url","attachment.name","attachment.size","attachment.contentType","stored.location","stored.url","stored.downloadUrl"]},{kind:"field",decorators:[(0,r.v)(),(0,i.Z)((()=>h))],key:"logConfig",value:()=>[{name:"log.timestamp",title:"Timestamp",value:"${date.now:date::yyyy-MM-dd HH:mm:ss.SSS}"},{name:"log.level",title:"Log Level"},{name:"log.message",title:"Log Message"},{name:"context.type",title:"Context Type"},{name:"object.id",title:"ID",ctxValues:{attachment:"${attachment.hash}",message:"${message.id}",thread:"${thread.id}"}},{name:"object.url",title:"GMail URL",ctxValues:{attachment:"${message.url}",message:"${message.url}",thread:"${thread.url}"}},{name:"object.date",title:"Message Date",ctxValues:{attachment:"${message.date}",message:"${message.date}",thread:"${thread.lastMessageDate}"}},{name:"object.subject",title:"Subject",ctxValues:{attachment:"${message.subject}",message:"${message.subject}",thread:"${thread.firstMessageSubject}"}},{name:"object.from",title:"From",ctxValues:{attachment:"${message.from}",message:"${message.from}"}},{name:"attachment.name",title:"Attachment Name"},{name:"attachment.contentType",title:"Content Type"},{name:"attachment.size",title:"Attachment Size"},{name:"stored.location",title:"Stored Location",ctxValues:{attachment:"${attachment.stored.location}"}},{name:"stored.url",title:"Stored URL",ctxValues:{attachment:"${attachment.stored.url}"}},{name:"stored.downloadUrl",title:"Download URL",ctxValues:{attachment:"${attachment.stored.downloadUrl}"}}]},{kind:"field",key:"logLevel",value:()=>l.INFO},{kind:"field",key:"logSensitiveRedactionMode",value:()=>u.AUTO},{kind:"field",key:"logSheetTracing",value:()=>!1},{kind:"field",decorators:[(0,r.v)()],key:"maxBatchSize",value:()=>10},{kind:"field",decorators:[(0,r.v)()],key:"maxRuntime",value:()=>280},{kind:"field",decorators:[(0,r.v)()],key:"markProcessedLabel",value:()=>""},{kind:"field",decorators:[(0,r.v)()],key:"markProcessedMethod",value:()=>d.MARK_MESSAGE_READ},{kind:"field",decorators:[(0,r.v)()],key:"sleepTimeThreads",value:()=>100},{kind:"field",decorators:[(0,r.v)()],key:"sleepTimeMessages",value:()=>0},{kind:"field",decorators:[(0,r.v)()],key:"sleepTimeAttachments",value:()=>0},{kind:"field",decorators:[(0,r.v)()],key:"timezone",value:()=>"default"}]}}));function g(e){return void 0===e&&(e={}),(0,o.bj)(m,e,{exposeDefaultValues:!0,exposeUnsetFields:!1})}function p(e){return e=(0,c.I)(e,g(),{},["markProcessedMethod"])}},7694:(e,t,s)=>{s.d(t,{L:()=>n});var a=s(4467);class n{}(0,a.A)(n,"DRIVE_TESTS_BASE_PATH","/GmailProcessor-Tests/e2e"),(0,a.A)(n,"EMAIL_SLEEP_TIME_MS",1e4),(0,a.A)(n,"EMAIL_SUBJECT_PREFIX","[GmailProcessor-Test] "),(0,a.A)(n,"GIT_REPO_BASE_URL","https://raw.githubusercontent.com/ahochsteger/gmail-processor"),(0,a.A)(n,"GIT_REPO_BRANCH","main"),(0,a.A)(n,"GIT_REPO_TEST_FILES_PATH","src/e2e-test/files")},7158:(e,t,s)=>{function a(e,t,s,a){return void 0===s&&(s={}),void 0===a&&(a=[]),a=a.concat([]),Object.keys(e).forEach((n=>{const r=function(e,t){return Array.isArray(e)&&t?e=e.map((e=>t(e))):"object"==typeof e&&t&&(e=t(e)),e}(e[n],s[n]),i=JSON.stringify(r);a.includes(n)||null!==r&&i!==JSON.stringify(t[n])&&"[]"!==i&&"{}"!==i||delete e[n]})),e}s.d(t,{I:()=>a})},514:(e,t,s)=>{s.d(t,{A:()=>a});const a='function simpleRun() {\n  const config = {\n    description:\n      "Use this to get started with Gmail Processor. It stores an attachment to Google Drive.",\n    settings: {\n      markProcessedMethod: "mark-read",\n    },\n    global: {\n      thread: {\n        match: {\n          query:\n            \'has:attachment -in:trash -in:drafts -in:spam after:${date.now:date::yyyy-MM-dd} is:unread subject:"[GmailProcessor-Test] simple"\',\n        },\n      },\n    },\n    threads: [\n      {\n        match: {\n          query: "from:${user.email}",\n        },\n        messages: [\n          {\n            attachments: [\n              {\n                match: {\n                  name: "^invoice\\\\.pdf$",\n                },\n                actions: [\n                  {\n                    name: "attachment.store",\n                    args: {\n                      location:\n                        "/GmailProcessor-Tests/e2e/simple/${message.date:date::yyyy-MM-dd}/${message.subject}-${attachment.name}",\n                      conflictStrategy: "keep",\n                    },\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  }\n\n  return GmailProcessorLib.run(config, "dry-run")\n}\n'}}]);