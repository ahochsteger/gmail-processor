"use strict";(self.webpackChunkgmail_processor_docs=self.webpackChunkgmail_processor_docs||[]).push([[6710],{493:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>g,default:()=>p,frontMatter:()=>c,metadata:()=>d,toc:()=>m});var a=n(4848),s=n(8453),o=n(5696);const r='{\n  "description": "Logs data to a Google Spreadsheet.",\n  "settings": {\n    "markProcessedMethod": "mark-read",\n    "logSheetLocation": "/GmailProcessor-Tests/logsheet-${date.now:date::yyyy-MM}",\n    "logSheetTracing": true,\n    "logFields": [\n      "log.timestamp",\n      "log.level",\n      "log.location",\n      "log.message",\n      "object.id",\n      "object.date",\n      "object.subject",\n      "object.from",\n      "object.url",\n      "attachment.name",\n      "attachment.size",\n      "attachment.contentType",\n      "stored.location",\n      "stored.url",\n      "stored.downloadUrl",\n      "context.type"\n    ]\n  },\n  "threads": [\n    {\n      "match": {\n        "query": "-in:trash -in:drafts -in:spam after:${date.now:date::yyyy-MM-dd} from:${user.email} is:unread subject:\\"[GmailProcessor-Test] logSheetLogging\\""\n      },\n      "actions": [\n        {\n          "name": "global.sheetLog",\n          "args": {\n            "level": "info",\n            "message": "Thread log (pre-main): ${thread.id}"\n          },\n          "processingStage": "pre-main"\n        },\n        {\n          "name": "global.sheetLog",\n          "args": {\n            "level": "info",\n            "message": "Thread log (main): ${thread.id}"\n          },\n          "processingStage": "main"\n        },\n        {\n          "name": "global.sheetLog",\n          "args": {\n            "level": "info",\n            "message": "Thread log (post-main): ${thread.id}"\n          },\n          "processingStage": "post-main"\n        }\n      ],\n      "messages": [\n        {\n          "actions": [\n            {\n              "name": "global.sheetLog",\n              "args": {\n                "level": "warn",\n                "message": "Message log (pre-main): ${message.id}"\n              },\n              "processingStage": "pre-main"\n            },\n            {\n              "name": "global.sheetLog",\n              "args": {\n                "level": "warn",\n                "message": "Message log (main): ${message.id}"\n              },\n              "processingStage": "main"\n            },\n            {\n              "name": "global.sheetLog",\n              "args": {\n                "level": "warn",\n                "message": "Message log (post-main): ${message.id}"\n              },\n              "processingStage": "post-main"\n            }\n          ],\n          "attachments": [\n            {\n              "actions": [\n                {\n                  "name": "global.sheetLog",\n                  "args": {\n                    "level": "error",\n                    "message": "Attachment log (pre-main): ${attachment.hash}"\n                  },\n                  "processingStage": "pre-main"\n                },\n                {\n                  "name": "attachment.store",\n                  "args": {\n                    "conflictStrategy": "update",\n                    "location": "/GmailProcessor-Tests/e2e/logSheetLogging/${attachment.name}"\n                  }\n                },\n                {\n                  "name": "global.sheetLog",\n                  "args": {\n                    "level": "error",\n                    "message": "Attachment log (post-main): ${attachment.hash}"\n                  },\n                  "processingStage": "post-main"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n',l='function logSheetLoggingRun() {\n  const config = {\n    description: "Logs data to a Google Spreadsheet.",\n    settings: {\n      markProcessedMethod: "mark-read",\n      logSheetLocation:\n        "/GmailProcessor-Tests/logsheet-${date.now:date::yyyy-MM}",\n      logSheetTracing: true,\n      logFields: [\n        "log.timestamp",\n        "log.level",\n        "log.location",\n        "log.message",\n        "object.id",\n        "object.date",\n        "object.subject",\n        "object.from",\n        "object.url",\n        "attachment.name",\n        "attachment.size",\n        "attachment.contentType",\n        "stored.location",\n        "stored.url",\n        "stored.downloadUrl",\n        "context.type",\n      ],\n    },\n    threads: [\n      {\n        match: {\n          query:\n            \'-in:trash -in:drafts -in:spam after:${date.now:date::yyyy-MM-dd} from:${user.email} is:unread subject:"[GmailProcessor-Test] logSheetLogging"\',\n        },\n        actions: [\n          {\n            name: "global.sheetLog",\n            args: {\n              level: "info",\n              message: "Thread log (pre-main): ${thread.id}",\n            },\n            processingStage: "pre-main",\n          },\n          {\n            name: "global.sheetLog",\n            args: {\n              level: "info",\n              message: "Thread log (main): ${thread.id}",\n            },\n            processingStage: "main",\n          },\n          {\n            name: "global.sheetLog",\n            args: {\n              level: "info",\n              message: "Thread log (post-main): ${thread.id}",\n            },\n            processingStage: "post-main",\n          },\n        ],\n        messages: [\n          {\n            actions: [\n              {\n                name: "global.sheetLog",\n                args: {\n                  level: "warn",\n                  message: "Message log (pre-main): ${message.id}",\n                },\n                processingStage: "pre-main",\n              },\n              {\n                name: "global.sheetLog",\n                args: {\n                  level: "warn",\n                  message: "Message log (main): ${message.id}",\n                },\n                processingStage: "main",\n              },\n              {\n                name: "global.sheetLog",\n                args: {\n                  level: "warn",\n                  message: "Message log (post-main): ${message.id}",\n                },\n                processingStage: "post-main",\n              },\n            ],\n            attachments: [\n              {\n                actions: [\n                  {\n                    name: "global.sheetLog",\n                    args: {\n                      level: "error",\n                      message: "Attachment log (pre-main): ${attachment.hash}",\n                    },\n                    processingStage: "pre-main",\n                  },\n                  {\n                    name: "attachment.store",\n                    args: {\n                      conflictStrategy: "update",\n                      location:\n                        "/GmailProcessor-Tests/e2e/logSheetLogging/${attachment.name}",\n                    },\n                  },\n                  {\n                    name: "global.sheetLog",\n                    args: {\n                      level: "error",\n                      message: "Attachment log (post-main): ${attachment.hash}",\n                    },\n                    processingStage: "post-main",\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  }\n\n  return GmailProcessorLib.run(config, "dry-run")\n}\n';var i=n(6172);const c={id:"logSheetLogging",title:"LogSheet Logging",description:"Logs data to a Google Spreadsheet."},g=void 0,d={id:"examples/advanced/logSheetLogging",title:"LogSheet Logging",description:"Logs data to a Google Spreadsheet.",source:"@site/docs/examples/advanced/logSheetLogging.mdx",sourceDirName:"examples/advanced",slug:"/examples/advanced/logSheetLogging",permalink:"/gmail-processor/docs/examples/advanced/logSheetLogging",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/examples/advanced/logSheetLogging.mdx",tags:[],version:"current",frontMatter:{id:"logSheetLogging",title:"LogSheet Logging",description:"Logs data to a Google Spreadsheet."},sidebar:"docsSidebar",previous:{title:"Custom Actions",permalink:"/gmail-processor/docs/examples/advanced/customActions"},next:{title:"Regular Expressions",permalink:"/gmail-processor/docs/examples/advanced/regularExpressions"}},u={},m=[];function h(e){const t={code:"code",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"This example demonstrates the advanced logging possibilities to a Google Spreadsheet."}),"\n",(0,a.jsxs)(t.p,{children:["The following ",(0,a.jsx)(t.code,{children:"settings"})," are used to configure the logging behafior:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"logSheetLocation"}),": The location of the spreadsheet document to be logged into."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"logFields"}),": The list of log fields which are used to log into a separate column in the given order."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"logSheetTracing"}),": Logs additional tracing logs into the log sheet."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["The action ",(0,a.jsx)(t.code,{children:"global.sheetLog"})," is then used to log certain messages into the logsheet at the given ",(0,a.jsx)(t.code,{children:"processingStage"}),"s."]}),"\n",(0,a.jsx)(o.A,{info:i.pq,config:r,script:l})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},9365:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});n(6540);var a=n(4164);const s={tabItem:"tabItem_Ymn6"};var o=n(4848);function r(e){let{children:t,hidden:n,className:r}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,r),hidden:n,children:t})}},1470:(e,t,n)=>{n.r(t),n.d(t,{default:()=>T});var a=n(6540),s=n(4164),o=n(3104),r=n(6347),l=n(205),i=n(7485),c=n(1682),g=n(679);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:s}}=e;return{value:t,label:n,attributes:a,default:s}}))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const s=(0,r.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i.aZ)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(s.location.search);t.set(o,e),s.replace({...s.location,search:t.toString()})}),[o,s])]}function p(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,o=u(e),[r,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[c,d]=h({queryString:n,groupId:s}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,o]=(0,g.Dv)(n);return[s,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:s}),b=(()=>{const e=c??p;return m({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{b&&i(b)}),[b]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),f(e)}),[d,f,o]),tabValues:o}}var f=n(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(4848);function S(e){let{className:t,block:n,selectedValue:a,selectValue:r,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),g=e=>{const t=e.currentTarget,n=i.indexOf(t),s=l[n].value;s!==a&&(c(t),r(s))},d=e=>{let t=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:o}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>i.push(e),onKeyDown:d,onClick:g,...o,className:(0,s.A)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:o}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function A(e){const t=p(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",b.tabList),children:[(0,v.jsx)(S,{...t,...e}),(0,v.jsx)(y,{...t,...e})]})}function T(e){const t=(0,f.A)();return(0,v.jsx)(A,{...e,children:d(e.children)},String(t))}},5696:(e,t,n)=>{n.d(t,{A:()=>m});var a=n(8774),s=n(1432),o=n(9365),r=n(1470),l=(n(6540),n(301)),i=n(4848);const c="https://github.com/ahochsteger/gmail-processor/blob/main/src/examples",g="https://github.com/ahochsteger/gmail-processor/issues",d="https://github.com/ahochsteger/gmail-processor/pull";function u(e,t,n){let a=[];return n&&n.length>0&&(a=[(0,i.jsxs)("span",{children:[" | ",e,": "]},`${e}-0`)].concat(n?.map(((e,n,a)=>(0,i.jsxs)("span",{children:[(0,i.jsxs)("a",{href:`${t}/${e}`,children:["#",e]}),n<a.length-1?" ":""]},e)))),a.push((0,i.jsx)("span",{}))),a}function m(e){let{info:t,config:n,script:m}=e;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("p",{children:["\ud83d\udc49 Edit this example in the ",(0,i.jsx)(a.A,{href:`/playground?example=${t.name}`,children:"playground"}),t.variant===l.sE.MIGRATION_V1?" and automatically migrate it to the v2 format using the convert button":"","."]}),(0,i.jsxs)(r.default,{children:[(0,i.jsx)(o.default,{value:"config",label:"Config",default:!0,children:(0,i.jsx)(s.default,{language:"js",showLineNumbers:!0,children:n})}),(0,i.jsx)(o.default,{value:"script",label:"Script",children:(0,i.jsx)(s.default,{language:"js",showLineNumbers:!0,children:m})})]}),(0,i.jsxs)("p",{children:[(0,i.jsxs)("span",{children:["Source: ",(0,i.jsxs)("a",{href:`${c}/${t.category}/${t.name}`,children:[t.name,".ts"]})]}),u("Issues",g,t.issues),u("PRs",d,t.pullRequests)]})]})}},301:(e,t,n)=>{n.d(t,{bk:()=>s,lI:()=>a,sE:()=>o});let a=function(e){return e.ACTIONS="actions",e.ADVANCED="advanced",e.BASICS="basics",e.FEATURES="features",e.MIGRATIONS="migrations",e.REGRESSIONS="regressions",e}({}),s=function(e){return e.CONFIG="config",e.DOCS="docs",e.DOCS_INDEX="docs-index",e.GAS_CODE="gas-code",e.GAS_TEST="gas-test",e.TEST_SPEC="test-spec",e}({}),o=function(e){return e.CUSTOM_ACTIONS="custom-actions",e.MIGRATION_V1="migration-v1",e}({})},6172:(e,t,n)=>{n.d(t,{Fw:()=>g,pq:()=>i});n(2744);var a=n(6407),s=n(301),o=n(8158),r=n(4460),l=n(7694);const i={name:"logSheetLogging",title:"LogSheet Logging",description:"Logs data to a Google Spreadsheet.",category:s.lI.ADVANCED,skipGenerate:[s.bk.TEST_SPEC]},c={description:i.description,settings:{markProcessedMethod:a.Pn.MARK_MESSAGE_READ,logSheetLocation:"/GmailProcessor-Tests/logsheet-${date.now:date::yyyy-MM}",logSheetTracing:!0,logFields:["log.timestamp","log.level","log.location","log.message","object.id","object.date","object.subject","object.from","object.url","attachment.name","attachment.size","attachment.contentType","stored.location","stored.url","stored.downloadUrl","context.type"]},threads:[{match:{query:`-in:trash -in:drafts -in:spam after:\${date.now:date::yyyy-MM-dd} from:\${user.email} is:unread subject:"${l.L.EMAIL_SUBJECT_PREFIX}${i.name}"`},actions:[{name:"global.sheetLog",args:{level:a.$b.INFO,message:"Thread log (pre-main): ${thread.id}"},processingStage:r.Sg.PRE_MAIN},{name:"global.sheetLog",args:{level:a.$b.INFO,message:"Thread log (main): ${thread.id}"},processingStage:r.Sg.MAIN},{name:"global.sheetLog",args:{level:a.$b.INFO,message:"Thread log (post-main): ${thread.id}"},processingStage:r.Sg.POST_MAIN}],messages:[{actions:[{name:"global.sheetLog",args:{level:a.$b.WARN,message:"Message log (pre-main): ${message.id}"},processingStage:r.Sg.PRE_MAIN},{name:"global.sheetLog",args:{level:a.$b.WARN,message:"Message log (main): ${message.id}"},processingStage:r.Sg.MAIN},{name:"global.sheetLog",args:{level:a.$b.WARN,message:"Message log (post-main): ${message.id}"},processingStage:r.Sg.POST_MAIN}],attachments:[{actions:[{name:"global.sheetLog",args:{level:a.$b.ERROR,message:"Attachment log (pre-main): ${attachment.hash}"},processingStage:r.Sg.PRE_MAIN},{name:"attachment.store",args:{conflictStrategy:o.c2.UPDATE,location:`${l.L.DRIVE_TESTS_BASE_PATH}/${i.name}/\${attachment.name}`}},{name:"global.sheetLog",args:{level:a.$b.ERROR,message:"Attachment log (post-main): ${attachment.hash}"},processingStage:r.Sg.POST_MAIN}]}]}]}]},g={info:i,config:c}},2744:(e,t,n)=>{n.d(t,{Ah:()=>s,GS:()=>r,KI:()=>o,jV:()=>a});let a=function(e){return e.DRY_RUN="dry-run",e.SAFE_MODE="safe-mode",e.DANGEROUS="dangerous",e}({}),s=function(e){return e.BOOLEAN="boolean",e.DATE="date",e.NUMBER="number",e.STRING="string",e.VARIABLE="variable",e}({});function o(e,t,n,a,s){return{deprecationInfo:s,description:a,title:n,type:e,value:t}}let r=function(e){return e.ERROR="error",e.OK="ok",e}({});Error},8158:(e,t,n)=>{n.d(t,{c2:()=>W});n(2744);var a=n(9749),s=n(857),o=n(7015),r=n(6749),l=n(3863),i=n(641),c=n(4773),g=n(2511),d=n(53),u=n(7456),m=n(6712),h=n(262),p=n(2695),f=n(5940),b=n(4844),v=n(9772),S=n(8908),y=n(7256),A=n(739),T=n(3365),j=n(4912),x=n(2829),E=n(5668),L=n(8274),$=n(341),k=n(5076),I=n(297),M=n(3572),R=n(9446),_=n(7616),N=n(2190),w=n(9585),P=n(6672),O=n(7244),D=n(4138),V=n(7376),G=n(8933),C=n(2702),U=n(1906),F=n(6560),q=n(7038),B=n(9590),z=n(2745),K=n(5407),H=n(3945),J=n(6014);n(4712),n(4758),n(3711);a.D,s.z,o.F,r.g,l.f,i.V,c.p,g.j,d.x,u.o,m.o,h.Q,p.B,f.o,b.d,v.K,S.W,y.E,A.T,T.j,j.u,x.R,E.u,L.G,$.H,k.M,I.N,M._,R.D,_.W,N.i,w.N,P.G,O.o,D.M,V.Q,G.b,C.w,U.c,F.w,q.a,B.a,z.R,K.R,H.D,J.K;let W=function(e){return e.BACKUP="backup",e.ERROR="error",e.KEEP="keep",e.REPLACE="replace",e.SKIP="skip",e.UPDATE="update",e}({})},4460:(e,t,n)=>{n.d(t,{Sg:()=>l,ej:()=>m,jG:()=>u,kj:()=>g,mt:()=>h,v1:()=>c,wf:()=>d});var a=n(4729),s=n(8420),o=n(5698),r=(n(5508),n(7158));let l=function(e){return e.PRE_MAIN="pre-main",e.MAIN="main",e.POST_MAIN="post-main",e}({}),i=(0,a.A)(null,(function(e){return{F:class{constructor(){e(this)}},d:[{kind:"field",decorators:[(0,s.v)()],key:"args",value:void 0},{kind:"field",decorators:[(0,s.v)()],key:"description",value:()=>""},{kind:"field",decorators:[(0,s.v)()],key:"name",value:()=>""},{kind:"field",decorators:[(0,s.v)()],key:"processingStage",value:()=>l.POST_MAIN}]}}));class c extends i{}class g extends i{}class d extends i{}function u(e){var t;return e=(0,r.I)(e,(t={name:"thread.noop"},(0,o.bj)(c,t,{exposeDefaultValues:!0,exposeUnsetFields:!1})))}function m(e){var t;return e=(0,r.I)(e,(t={name:"message.noop"},(0,o.bj)(g,t,{exposeDefaultValues:!0,exposeUnsetFields:!1})))}function h(e){var t;return e=(0,r.I)(e,(t={name:"attachment.noop"},(0,o.bj)(d,t,{exposeDefaultValues:!0,exposeUnsetFields:!1})))}},6407:(e,t,n)=>{n.d(t,{$b:()=>c,GJ:()=>m,Pn:()=>g,c1:()=>p,we:()=>h});var a=n(4729),s=n(4467),o=n(8420),r=n(5136),l=n(5698),i=(n(5508),n(7158));let c=function(e){return e.TRACE="trace",e.DEBUG="debug",e.INFO="info",e.WARN="warn",e.ERROR="error",e}({}),g=function(e){return e.ADD_THREAD_LABEL="add-label",e.CUSTOM="custom",e.MARK_MESSAGE_READ="mark-read",e}({});class d{constructor(){(0,s.A)(this,"name",""),(0,s.A)(this,"title",""),(0,s.A)(this,"value",void 0),(0,s.A)(this,"ctxValues",{})}}let u=function(e){return e.NONE="none",e.AUTO="auto",e.ALL="all",e}({}),m=(0,a.A)(null,(function(e){return{F:class{constructor(){e(this)}},d:[{kind:"field",key:"defaultTimestampFormat",value:()=>"yyyy-MM-dd HH:mm:ss"},{kind:"field",key:"defaultArrayJoinSeparator",value:()=>","},{kind:"field",decorators:[(0,o.v)()],key:"logSheetLocation",value:()=>""},{kind:"field",decorators:[(0,o.v)()],key:"logFields",value:()=>["log.timestamp","log.level","log.location","log.message","object.id","object.date","object.subject","object.from","object.url","attachment.name","attachment.size","attachment.contentType","stored.location","stored.url","stored.downloadUrl"]},{kind:"field",decorators:[(0,o.v)(),(0,r.Z)((()=>d))],key:"logConfig",value:()=>[{name:"log.timestamp",title:"Timestamp",value:"${date.now:date::yyyy-MM-dd HH:mm:ss.SSS}"},{name:"log.level",title:"Log Level"},{name:"log.message",title:"Log Message"},{name:"context.type",title:"Context Type"},{name:"object.id",title:"ID",ctxValues:{attachment:"${attachment.hash}",message:"${message.id}",thread:"${thread.id}"}},{name:"object.url",title:"GMail URL",ctxValues:{attachment:"${message.url}",message:"${message.url}",thread:"${thread.url}"}},{name:"object.date",title:"Message Date",ctxValues:{attachment:"${message.date}",message:"${message.date}",thread:"${thread.lastMessageDate}"}},{name:"object.subject",title:"Subject",ctxValues:{attachment:"${message.subject}",message:"${message.subject}",thread:"${thread.firstMessageSubject}"}},{name:"object.from",title:"From",ctxValues:{attachment:"${message.from}",message:"${message.from}"}},{name:"attachment.name",title:"Attachment Name"},{name:"attachment.contentType",title:"Content Type"},{name:"attachment.size",title:"Attachment Size"},{name:"stored.location",title:"Stored Location",ctxValues:{attachment:"${attachment.stored.location}"}},{name:"stored.url",title:"Stored URL",ctxValues:{attachment:"${attachment.stored.url}"}},{name:"stored.downloadUrl",title:"Download URL",ctxValues:{attachment:"${attachment.stored.downloadUrl}"}}]},{kind:"field",key:"logLevel",value:()=>c.INFO},{kind:"field",key:"logSensitiveRedactionMode",value:()=>u.AUTO},{kind:"field",key:"logSheetTracing",value:()=>!1},{kind:"field",decorators:[(0,o.v)()],key:"maxBatchSize",value:()=>10},{kind:"field",decorators:[(0,o.v)()],key:"maxRuntime",value:()=>280},{kind:"field",decorators:[(0,o.v)()],key:"markProcessedLabel",value:()=>""},{kind:"field",decorators:[(0,o.v)()],key:"markProcessedMethod",value:()=>g.MARK_MESSAGE_READ},{kind:"field",decorators:[(0,o.v)()],key:"sleepTimeThreads",value:()=>100},{kind:"field",decorators:[(0,o.v)()],key:"sleepTimeMessages",value:()=>0},{kind:"field",decorators:[(0,o.v)()],key:"sleepTimeAttachments",value:()=>0},{kind:"field",decorators:[(0,o.v)()],key:"timezone",value:()=>"default"}]}}));function h(e){return void 0===e&&(e={}),(0,l.bj)(m,e,{exposeDefaultValues:!0,exposeUnsetFields:!1})}function p(e){return e=(0,i.I)(e,h(),{},["markProcessedMethod"])}},7694:(e,t,n)=>{n.d(t,{L:()=>s});var a=n(4467);class s{}(0,a.A)(s,"DRIVE_TESTS_BASE_PATH","/GmailProcessor-Tests/e2e"),(0,a.A)(s,"EMAIL_SLEEP_TIME_MS",1e4),(0,a.A)(s,"EMAIL_SUBJECT_PREFIX","[GmailProcessor-Test] "),(0,a.A)(s,"GIT_REPO_BASE_URL","https://raw.githubusercontent.com/ahochsteger/gmail-processor"),(0,a.A)(s,"GIT_REPO_BRANCH","main"),(0,a.A)(s,"GIT_REPO_TEST_FILES_PATH","src/e2e-test/files")},7158:(e,t,n)=>{function a(e,t,n,a){return void 0===n&&(n={}),void 0===a&&(a=[]),a=a.concat([]),Object.keys(e).forEach((s=>{const o=function(e,t){return Array.isArray(e)&&t?e=e.map((e=>t(e))):"object"==typeof e&&t&&(e=t(e)),e}(e[s],n[s]),r=JSON.stringify(o);a.includes(s)||null!==o&&r!==JSON.stringify(t[s])&&"[]"!==r&&"{}"!==r||delete e[s]})),e}n.d(t,{I:()=>a})}}]);