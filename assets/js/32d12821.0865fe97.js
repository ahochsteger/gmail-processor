"use strict";(self.webpackChunkgmail_processor_docs=self.webpackChunkgmail_processor_docs||[]).push([[5588],{1200:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>m,default:()=>p,frontMatter:()=>u,metadata:()=>a,toc:()=>g});const a=JSON.parse('{"id":"examples/migrations/migrationMin","title":"Minimal Migration","description":"Migrate a minimal Gmail2GDrive v1.x configuration to the new Gmail Processor v2.x config format.","source":"@site/docs/examples/migrations/migrationMin.mdx","sourceDirName":"examples/migrations","slug":"/examples/migrations/migrationMin","permalink":"/gmail-processor/docs/examples/migrations/migrationMin","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/examples/migrations/migrationMin.mdx","tags":[],"version":"current","frontMatter":{"id":"migrationMin","title":"Minimal Migration","description":"Migrate a minimal Gmail2GDrive v1.x configuration to the new Gmail Processor v2.x config format."},"sidebar":"docsSidebar","previous":{"title":"Advanced Migration","permalink":"/gmail-processor/docs/examples/migrations/migrationAdvanced"},"next":{"title":"Regressions","permalink":"/gmail-processor/docs/examples/regressions/"}}');var r=t(74848),i=t(28453),s=t(25696);const o='{\n  "processedLabel": "gmail2gdrive/client-test",\n  "sleepTime": 100,\n  "maxRuntime": 280,\n  "newerThan": "2m",\n  "timezone": "GMT",\n  "rules": [\n    {\n      "filter": "to:my.name+scans@gmail.com",\n      "folder": "\'Scans\'-yyyy-MM-dd"\n    }\n  ]\n}\n',l='function migrationMinConvert() {\n  const oldConfig = {\n    processedLabel: "gmail2gdrive/client-test",\n    sleepTime: 100,\n    maxRuntime: 280,\n    newerThan: "2m",\n    timezone: "GMT",\n    rules: [\n      {\n        filter: "to:my.name+scans@gmail.com",\n        folder: "\'Scans\'-yyyy-MM-dd",\n      },\n    ],\n  }\n\n  const migratedConfig = GmailProcessorLib.convertV1Config(oldConfig)\n  console.log(JSON.stringify(migratedConfig, null, 2))\n  return migratedConfig\n}\n';var c=t(27669);const u={id:"migrationMin",title:"Minimal Migration",description:"Migrate a minimal Gmail2GDrive v1.x configuration to the new Gmail Processor v2.x config format."},m=void 0,d={},g=[];function f(e){const n={p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"This is a minimal Gmail2GDrive v1.x configuration example to demonstrate the conversion to the Gmail Processor v2.x config format."}),"\n",(0,r.jsx)(s.A,{info:c.pq,config:o,script:l})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},11470:(e,n,t)=>{t.r(n),t.d(n,{default:()=>I});var a=t(96540),r=t(34164),i=t(23104),s=t(56347),o=t(205),l=t(57485),c=t(31682),u=t(70679);function m(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return m(e).map(({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a}))}(t);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function g({value:e,tabValues:n}){return n.some(n=>n.value===e)}function f({queryString:e=!1,groupId:n}){const t=(0,s.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(r),(0,a.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=d(e),[s,l]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i})),[c,m]=f({queryString:t,groupId:r}),[p,h]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,u.Dv)(n);return[t,(0,a.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),b=(()=>{const e=c??p;return g({value:e,tabValues:i})?e:null})();(0,o.A)(()=>{b&&l(b)},[b]);return{selectedValue:s,selectValue:(0,a.useCallback)(e=>{if(!g({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),m(e),h(e)},[m,h,i]),tabValues:i}}var h=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function x({className:e,block:n,selectedValue:t,selectValue:a,tabValues:s}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const n=e.currentTarget,r=o.indexOf(n),i=s[r].value;i!==t&&(l(n),a(i))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:a})=>(0,v.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:c,...a,className:(0,r.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function y({lazy:e,children:n,selectedValue:t}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===t);return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function M(e){const n=p(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,v.jsx)(x,{...n,...e}),(0,v.jsx)(y,{...n,...e})]})}function I(e){const n=(0,h.A)();return(0,v.jsx)(M,{...e,children:m(e.children)},String(n))}},19365:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var i=t(74848);function s({children:e,hidden:n,className:t}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,t),hidden:n,children:e})}},20301:(e,n,t)=>{t.d(n,{bk:()=>r,lI:()=>a,sE:()=>i});let a=function(e){return e.ACTIONS="actions",e.ADVANCED="advanced",e.BASICS="basics",e.FEATURES="features",e.MIGRATIONS="migrations",e.REGRESSIONS="regressions",e}({}),r=function(e){return e.CONFIG="config",e.DOCS="docs",e.DOCS_INDEX="docs-index",e.GAS_CODE="gas-code",e.GAS_TEST="gas-test",e.TEST_SPEC="test-spec",e}({}),i=function(e){return e.CUSTOM_ACTIONS="custom-actions",e.MIGRATION_V1="migration-v1",e}({})},25696:(e,n,t)=>{t.d(n,{A:()=>f});var a=t(28774),r=t(73748),i=t(19365),s=t(11470),o=(t(96540),t(20301)),l=t(74848);const c="https://github.com/ahochsteger/gmail-processor/blob/main/src/examples",u="https://github.com/ahochsteger/gmail-processor/discussions",m="https://github.com/ahochsteger/gmail-processor/issues",d="https://github.com/ahochsteger/gmail-processor/pull";function g(e,n,t){let a=[];return t&&t.length>0&&(a=[(0,l.jsxs)("span",{children:[" | ",e,": "]},`${e}-0`)].concat(t?.map((e,t,a)=>(0,l.jsxs)("span",{children:[(0,l.jsxs)("a",{href:`${n}/${e}`,children:["#",e]}),t<a.length-1?" ":""]},e))),a.push((0,l.jsx)("span",{}))),a}function f({info:e,config:n,script:t}){return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("p",{children:["\ud83d\udc49 Edit this example in the ",(0,l.jsx)(a.A,{href:`/playground?example=${e.name}`,children:"playground"}),e.variant===o.sE.MIGRATION_V1?" and automatically migrate it to the v2 format using the convert button":"","."]}),(0,l.jsxs)(s.default,{children:[(0,l.jsx)(i.default,{value:"config",label:"Config",default:!0,children:(0,l.jsx)(r.default,{language:"js",showLineNumbers:!0,children:n})}),(0,l.jsx)(i.default,{value:"script",label:"Script",children:(0,l.jsx)(r.default,{language:"js",showLineNumbers:!0,children:t})})]}),(0,l.jsxs)("p",{children:[(0,l.jsxs)("span",{children:["Source: ",(0,l.jsxs)("a",{href:`${c}/${e.category}/${e.name}`,children:[e.name,".ts"]})]}),g("Issues",m,e.issues),g("PRs",d,e.pullRequests),g("Discussions",u,e.discussions)]})]})}},27669:(e,n,t)=>{t.d(n,{Fw:()=>s,pq:()=>r});var a=t(20301);const r={name:"migrationMin",title:"Minimal Migration",description:"Migrate a minimal Gmail2GDrive v1.x configuration to the new Gmail Processor v2.x config format.",category:a.lI.MIGRATIONS,variant:a.sE.MIGRATION_V1},i={processedLabel:"gmail2gdrive/client-test",sleepTime:100,maxRuntime:280,newerThan:"2m",timezone:"GMT",rules:[{filter:"to:my.name+scans@gmail.com",folder:"'Scans'-yyyy-MM-dd"}]},s={info:r,migrationConfig:i}}}]);