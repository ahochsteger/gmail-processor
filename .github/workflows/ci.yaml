name: ci

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      skip_build_docs:
        description: "Skip build docs"
        type: boolean
        default: false
      skip_build_lib:
        description: "Skip build lib"
        type: boolean
        default: false
      skip_deploy_docs:
        description: "Skip deploy docs"
        type: boolean
        default: false
      skip_deploy_lib_ci:
        description: "Skip deploy lib (CI)"
        type: boolean
        default: false
      skip_deploy_lib_release:
        description: "Skip deploy lib (release)"
        type: boolean
        default: false
      skip_qa_coveralls:
        description: "Skip QA Coveralls"
        type: boolean
        default: false
      skip_qa_sonarqube:
        description: "Skip QA SonarQube"
        type: boolean
        default: false
      skip_release:
        description: "Skip release"
        type: boolean
        default: true
      skip_test:
        description: "Skip test"
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_gas_version: ${{ steps.push-gas.outputs.new_gas_version }}
      pages_version: main # Simplified, as release-please handles versioning
      do_push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    environment:
      name: main
    env:
      CLASP_ACCESS_TOKEN: ${{secrets.CLASP_ACCESS_TOKEN}}
      CLASP_CLIENT_ID: ${{secrets.CLASP_CLIENT_ID}}
      CLASP_CLIENT_SECRET: ${{secrets.CLASP_CLIENT_SECRET}}
      CLASP_EXAMPLES_DEPLOYMENT_ID: ${{secrets.CLASP_EXAMPLES_DEPLOYMENT_ID}}
      CLASP_EXAMPLES_SCRIPT_ID: ${{secrets.CLASP_EXAMPLES_SCRIPT_ID}}
      CLASP_ID_TOKEN: ${{secrets.CLASP_ID_TOKEN}}
      CLASP_LIB_DEPLOYMENT_ID: ${{secrets.CLASP_LIB_DEPLOYMENT_ID}}
      CLASP_LIB_SCRIPT_ID: ${{secrets.CLASP_LIB_SCRIPT_ID}}
      CLASP_REFRESH_TOKEN: ${{secrets.CLASP_REFRESH_TOKEN}}
      GCLOUD_PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
      GCLOUD_PROJECT_NR: ${{secrets.GCLOUD_PROJECT_NR}}
    steps:
      - id: release
        name: Release
        if: ${{ !github.event.inputs.skip_release }}
        uses: googleapis/release-please-action@16a9c90856f42705d54a6fda1823352bdc62cf38 # v4
        with:
          release-type: node
      - id: checkout
        name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - id: setup-nodejs
        name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 22.x
          cache: "npm"
      - id: build-lib
        if: ${{ !github.event.inputs.skip_build_lib }}
        name: Build lib
        run: npm run ci:build
      - id: test
        if: ${{ !github.event.inputs.skip_test }}
        name: Test
        run: npm run ci:test
      - id: build-docs
        if: ${{ !github.event.inputs.skip_build_docs }}
        name: Build docs
        run: npm run ci:docs
      - id: qa-coveralls
        if: ${{ !github.event.inputs.skip_qa_coveralls }}
        name: QA Coveralls
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2
      - id: qa-sonarqube
        if: ${{ !github.event.inputs.skip_qa_sonarqube }}
        name: QA SonarQube
        uses: SonarSource/sonarqube-scan-action@2f77a1ec69fb1d595b06f35ab27e97605bdef703 # v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - id: deploy-lib-ci
        if: ${{ !github.event.inputs.skip_deploy_lib_ci }}
        name: Deploy Lib (CI)
        run: |
          npm run push
          echo "new_gas_version=$(cat build/gas/lib-version.txt)" >> "${GITHUB_OUTPUT}"
      - id: deploy-lib-release
        if: ${{ !github.event.inputs.skip_deploy_lib_release && !github.event.inputs.skip_release && steps.release.outputs.release_created }} # Check if a release was created
        name: Deploy Lib (Release)
        run: npm run deploy
        env:
          CLASP_DEPLOYMENT_NAME: ${{ steps.release.outputs.tag_name }}
      - id: update-release-notes
        if: ${{ !github.event.inputs.skip_release && steps.release.outputs.release_created }} # Check if a release was created
        name: Update Release Notes
        run: |
          npm run release:update
        env:
          CLASP_DEPLOYMENT_NAME: ${{ steps.release.outputs.tag_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: deploy-docs
        if: ${{ !github.event.inputs.skip_deploy_docs }}
        name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8 # v4
        with:
          folder: docs/build
