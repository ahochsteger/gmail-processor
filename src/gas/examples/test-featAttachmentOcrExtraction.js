/**
 * TODOs:
 * * Move E2E_GLOBAL_CONFIG to e2eInit.js
 * * Provide an e2e init function that can be parameterized with a unique name.
 * * Name e2e tests after features and not PRs (features will be kept, but their original PRs may not be valid forever)
 *
 * Use Cases:
 * * Initialize files in Google Drive
 * * Process email with attachments
 *   * Send email with attachments
 *   * Process a config
 */

/**
 * This is a special configuration used for end-to-end testing using the emails generated by `e2eInit.js`.
 * @type {import("../../lib/e2e/E2E").E2ETestConfig}
 */
const featAttachmentOcrExtractionTestConfig = {
  globals: E2E_GLOBAL_CONFIG,
  initConfig: {
    name: "featAttachmentOcrExtraction",
    // branch: "main",
    mails: [
      {
        // subject: "featAttachmentOcrExtraction",
        // body: "featAttachmentOcrExtraction",
        attachments: [`${E2E_FILES_SRC_PATH}/invoice.pdf`],
      },
    ],
  },
  runConfig: {
    description:
      "Test for PR #304 - fix getBlob error on conflict strategy 'update'",
    settings: {
      logSheetLocation:
        "/GmailProcessor-Tests/logsheet-${date.now:date::yyyy-MM}",
      markProcessedMethod: "mark-read",
      timezone: "UTC",
    },
    global: {
      thread: {
        match: {
          query:
            "has:attachment -in:trash -in:drafts -in:spam after:${date.now:date::yyyy-MM-dd}",
          maxMessageCount: -1,
          minMessageCount: 1,
        },
      },
    },
    threads: [
      {
        match: {
          query:
            "from:${user.email} to:${user.email} subject:'Test with office attachments'",
        },
        attachments: [
          {
            description: "Process *.docx attachment files",
            match: {
              name: "(?<basename>.+)\\.docx$",
            },
            actions: [
              {
                description: "Store original docx file",
                name: "attachment.store",
                args: {
                  conflictStrategy: GmailProcessorLib.ConflictStrategy.REPLACE,
                  location: `${E2E_TESTS_BASE_PATH}/\${attachment.name}`,
                },
              },
              {
                description: "Store docx file converted to Google Docs format",
                name: "attachment.store",
                args: {
                  conflictStrategy: GmailProcessorLib.ConflictStrategy.REPLACE,
                  location: `${E2E_TESTS_BASE_PATH}/\${attachment.name.match.basename}`,
                  toMimeType: "application/vnd.google-apps.document",
                },
              },
            ],
          },
          {
            description: "Process *.pptx attachment files",
            match: {
              name: "(?<basename>.+)\\.pptx$",
            },
            actions: [
              {
                description: "Store original pptx file",
                name: "attachment.store",
                args: {
                  conflictStrategy: GmailProcessorLib.ConflictStrategy.REPLACE,
                  location: `${E2E_TESTS_BASE_PATH}/\${attachment.name}`,
                },
              },
              {
                description:
                  "Store pptx file converted to Google Presentations format",
                name: "attachment.store",
                args: {
                  conflictStrategy: GmailProcessorLib.ConflictStrategy.REPLACE,
                  location: `${E2E_TESTS_BASE_PATH}/\${attachment.name.match.basename}`,
                  toMimeType: "application/vnd.google-apps.presentation",
                },
              },
            ],
          },
          {
            description: "Process *.xlsx attachment files",
            match: {
              name: "(?<basename>.+)\\.xlsx$",
            },
            actions: [
              {
                description: "Store original xlsx file",
                name: "attachment.store",
                args: {
                  conflictStrategy: GmailProcessorLib.ConflictStrategy.REPLACE,
                  location: `${E2E_TESTS_BASE_PATH}/\${attachment.name}`,
                },
              },
              {
                description:
                  "Store xlsx file converted to Google Spreadsheet format",
                name: "attachment.store",
                args: {
                  conflictStrategy: GmailProcessorLib.ConflictStrategy.REPLACE,
                  location: `${E2E_TESTS_BASE_PATH}/\${attachment.name.match.basename}`,
                  toMimeType: "application/vnd.google-apps.spreadsheet",
                },
              },
            ],
          },
        ],
      },
    ],
  },
  assertions: [
    {
      assert: (testConfig, result) => {
        return { status: "success" }
      },
    },
  ],
}

/**
 * Run Gmail Processor with config
 * @param {GoogleAppsScript.Events.TimeDriven | undefined} evt Event information
 * @param {EnvContext | undefined} ctx Environment context
 * @returns {GmailProcessorLib.ProcessingResult} Processing result
 */
function testFeatAttachmentOcrExtraction(_evt, ctx) {
  return GmailProcessorLib.run(
    featAttachmentOcrExtractionTestConfig.runConfig,
    globalTestConfig,
    featAttachmentOcrExtractionTestConfig.assertions,
    GmailProcessorLib.RunMode.DANGEROUS,
    ctx,
  )
}
