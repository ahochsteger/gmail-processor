{
  "description": "This example demonstrates the use of the action `attachment.extractText` to extract matching text from the attachment body for use in later actions (e.g. `attachment.store`).",
  "global": {
    "thread": {
      "match": {
        "query": "has:attachment -in:trash -in:drafts -in:spam from:${user.email} to:${user.email} after:\"${date.now:date:-5m:yyyy-MM-dd HH:MM}\""
      }
    }
  },
  "threads": [
    {
      "match": {
        "query": "subject:featAttachmentOcrExtraction"
      },
      "attachments": [
        {
          "description": "Process all attachments named 'invoice*.pdf'",
          "match": {
            "name": "(?<basename>invoice.*)\\.pdf$"
          },
          "actions": [
            {
              "description": "Extract the text from the body of the PDF attachment using language auto-detection.",
              "name": "attachment.extractText",
              "args": {
                "docsFileLocation": "${variables.testDriveFolder}/ocr-en",
                "extract": "Invoice date:\\s*(?<invoiceDate>[A-Za-z]{3} [0-9]{1,2}, [0-9]{4})\\s*Invoice number:\\s*(?<invoiceNumber>[0-9]+)"
              },
              "processingStage": "pre-main"
            },
            {
              "description": "Store the attachment using extracted values for `invoiceNumber` and `invoiceDate`",
              "name": "attachment.store",
              "args": {
                "conflictStrategy": "update",
                "location": "GmailProcessor-Test/e2e/featAttachmentOcrExtraction/${attachment.name.match.basename}-${attachment.extracted.match.invoiceNumber}-${attachment.extracted.match.invoiceDate:date::yyyy-MM-DD}.pdf`",
                "description": "Invoice number: ${attachment.extracted.match.invoiceNumber}\nInvoice date: ${attachment.extracted.match.invoiceDate:date::yyyy-MM-DD}"
              }
            }
          ]
        }
      ]
    }
  ]
}
